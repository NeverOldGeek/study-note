 概续
	1.javaScript本身没有继承关键字（但可以通过接口实现接口）
	
<script type = "text/javascript">type属性可以不写
	脚本可以放在title，body，建议放在body外面


可以在标签内部事件句柄后直接写javascript语句
1.使用script
	内嵌式
2.使用外部文件
	alert("hollow word!") 保存到一个目录下;
3.在事件处理程序中使用javascript

弹框函数：alert("huanyingshiyong");


基本语法
1.变量（没有加Var代表是全局变量）ECMAScript中，只有两种执行环境，全局环境和函数环境，其他情况即使变量声明在
				一对大括号内，在括号外部仍然可以访问这些变量

				当函数的形参与函数内部定义的变量重名，优先使用声明变量
	1.java是静态语言必须新编译在运行，javascript是动态语言
	2.var count 
		var 可用于声明任何类型的变量，被称为万能类型
		当赋值时指定类型 eg：
		var 不写count变成全局变量

		
	3.Undefined: 
		只有一个值undefined，当变量只声明没赋值时默认赋值undefined，当函数要传参数而没传参数时默认传undefined
	  Number:
		NaN  当计算结果不是数据时返回NaN，
		Infinity是Number类型

		isNaN(数据),当数据不是Number类型时返回true，是Number类型返回false
	  String: 字符串型（使用双引号，单引号都行）
		String的prototype属性可以给字符串动态的添加方法
		substr(起始下标，长度)  	substring(起始下标，终止下标（不包含）)
		trim()截取字符串的前后空白，但存在兼容问题，IE浏览器不支持
	  boolean：
	  Object： 对象型
		js中自定义类的默认父类是object类型
		js中定义类的第一种方法
			function user（参数列表）{
				//属性
				this.a = 参数1；
				this.b = 参数2；

				//method
				this.shopping = funciton (){
				
				}
			}
		定义类的第二种方式
		//定义函数，不当做类来看的话，建议使用第一种方式
		//定义函数，把它当做类来看的话，建议使用第二种方式
			Employee = function(参数列表){
				this.a = 参数1；
				this.b = 参数2；
			}

	undefined,null,NaN之间的关系
		undefined和null的值相等，其他两两之间的值不等，它们的数据类型也不相同


	数组
		var a = [21,"adf",3.5];声明的同时初始化数组，注意在js中初始化的值用中括号括起来
		var a = new Array(5);new一个数组动态分配5个空间，js中的数组中元素的类型可以不一致
		追加数组：a.push("dsfa")尾部追加  a.unshift();头部追加
		删除数组：a.pop();尾部删除   a.shift（）头部删除

		二维数组：二维数组是依靠将一维数组中每个元素再次实例化成一维数组来创建的 

	

	通过document下的方法可以获取HTML中的节点，通过 节点.属性 可以获取节点的任何属性值；  这属于DOM编程

	很多元素中都有innerHTML属性，但不是所有元素都有；
	通过innerHTML属性既可以设置元素中的html代码也可以获取元素中的html代码


规则
	驼峰式
	全局变量定在多有函数之外
	局部・变量定义在函数体之内
		当局部变量与全局变量重名

	js中创造正则表达式的方式
		1.【常用】  var regexp = /正则表达式/flag
		2. var regexp = new RegExp（"正则表达式"，"flag"）
		
		注：flag可选值有：i,g，m。
			i:忽略大小写
			g：当前行所有数据
			m: 支持多行搜索
		i，g，m可以联合使用

	正则表达式有一个很重要的方法叫做test
		语法格式：
			var regexp = /正则表达式/
			var retvalue = regexp.test()
			retvalue:true  字符串符合正则表达式
			retvalue：false 字符串不符合正则表达式

	非打印字符：在屏幕上不会显示的字符eg：换行符
运算符：+-*、%++等
	== 只比较值，不比较类型
	=== 即比较值也比较类型
函数
	函数本身可以看做一种数据类型，所以可以将函数的地址赋给一个变量
	当函数被调用时，会自动创建一个arguments对象负责管理它所在函数的参数以及一些其他属性
	
	typeof 判断数据类型
	alert  弹出对话框
	parseInt 以第一个不是数字的结束
	parseFloat
	eval()
	isNaN(str)
	toFix()保留几位小数
2.运算符
3.控制语句
	与Java，一样
4.类型转换


自定义函数：
	第一种：function fun(参数1，参数2){}参数只有形参没有形参类型，不需要写函数返回值
		任何时候，函数需要返回值时，使用return即可，定义函数不能立即执行，必须调用后才会执行
	location:window系统自带的对象

	documen.frm.name.value
	var total = function(n){
		var i = 0;
		    result = 0;
		while(i < n){
		    result += i;
		}
	}定以后下面语句能调用
	
	匿名函数
	(function(){
	   //函数体
	})()；


类：
	可以通过.访问对象的属性  也可以通过 对象名["属性名"]方式访问，与访问数组元素区别是没有多双引号

自定义事件
事件监听写在标签上
动态绑定事件：
浏览器功能嗅探：
1.判断，若浏览器支持addEventListener
DOMContentLoaded：只要标签加载上，立即执行函数
if （document.addEventListener）{
   	document.addEventlistener('DOMContentLoaded',function(){
		//函数体
	});
}else if (document.attachEvent){
	document.attachEvent('load',function(){
		//函数体
	})；
}else {
	widnow.onload = function(){};
}
方法2：通过分析HTTP报文头navigator.useAgent(不推荐使用)




	1.click
	2.change
		change事件什么时候发生，当下拉列表选项发生改变时触发，此时注册在onchange事件句柄后的js代码会自动执行
	3.focus
	  blur
	4.load 当整个页面所有内容加载完毕后触发的事件
	6.submit 表单填写完整与否触发，表单提交事件，当<form>标签中的onSubmit属性返回为true时提交表单，false时不提交表单

如何在html中创建子节点
	document.createElment（）创建一个子节点
	节点对象.appendChild（）将创建的子节点追加到节点对象里面

核心对象：
1.window对象
属性：
status：设置、获取网页状态栏
方法：
confirm();确认对话框

2.history对象（浏览器历史）
forword(n)前进
back（n）后退
go(n)
3.setTimeout（延迟一段时间后执行）和setInterval（每间隔一段时间重新执行），clearInterval()(清除定时器)

4.Date对象
getYear()获取当前年份距1900之间的年数
getFullYear()
5.location对象
assign（url）
reload()


DOM文档对象（动态添加标签属性）

Event事件对象
x
y
keyCode
srcElement或e.target获取事件源对象
offsetX
offsetY


javascript中大括号代表对象，中括号代表数组



JQuery
	jQuery，是一个js框架，也可以认为是一个js库，帮助我们封装了很多javaScript的方法，方便我们使用

	JQuery对象：指的是通过jQuery创建出来的，一些对象，通过jQuery对象可以使用JQuery API中
		    提供的一些方法。
	注意：
		 DOM对象和jQuery对象，是不能互相调用的，例如DOM对象不能使用jQuery的方法，jQuery也不能
		 使用javaScript中的方法和属性

		jquery始终认为对象不止一个，返回一个数组

		当页面中所有的元素都加载完成后才会启动执行jQuery的代码
		用jQuery时：$(),jQuery(),window.jQuery() 三者等效 
		$其实就是jQuery库中定义的一个全局变量

	1.jQuery对象和DOM对象的相互转换
		DOM转jQuery：var Dom = document.getElementById("an");
			     var $dom = $(Dom);
		    
		jQuery转DOM: var Dom = $("an")[0];

		解释：jQuery对象其实是一个数组，数组的长度取决于页面元素的个数，通过id获取的只有一个对象，所以数组长度是1。
		注意：id是不能重复的，因此如果页面中有多个元素id相同那么jQuery只能获取第一次出现的这个id作为jQuery对象

		alert（$(".name").val()）
		//获取出来的jQuery是一个数组，如果直接使用jQuery那么jQuery会把数组中的第一个元素作为jQuery的对象使用
		alert($($(".name")[1]).val());
		如果想获取非第一个元素的对象，需要根据索引获取到指定元素位置的dom对象后，再转成jQuery对象，进行使用
	2.jQuery九种选择器
		基本选择器：*，#id，.class,element,.class.class
		层级选择器:
		简单
		内容
		可见性
		属性选择器：标签如果不允许有某个属性，但我们添了这个属性同样可以通过属性选择器取到
		子元素
		表单
		表单对象属性
	3.jQuery文档操作：
	   属性操作
		值
		1.val()获取表单元素的value属性值，这个元素可以是文本框以及下拉列表等
			eg：alert（$("#name").val()）
		  val(value)给表单元素的value属性赋值
			eg：alert（$("#name").val("good")）
		html和文本
		2.html()和text()
			 alert($("#div2").html())//获取id为div2这个元素的内容（包括页面中的所有html代码）
			 alert($("#div2").text())//获取id为div2这个元素的内容（不包括页面中的所有html代码）

			 $("#div3").html('<a href="#">这是div3</a>');//设置一段html代码到id为div3的这个元素中（html编译后的内容）
			 $（"#div4"）.text('<a href="#">这是div3</a>')// 设置一段html代码到id为div4的这个元素中（html的代码内容，不进行编译）
		class类
		3.addClass()和removeClass()
			向一个标签中添加和删除class属性
		操作所有属性
		4.$("#img").attr("src")//获取id为img的标签的src属性的值
		  $("#img").attr("src","img/1.jpg")//获取id为img的标签的src属性的值设为img/1.jpg
			$("#ad").attr("value")和$("#ad").val()的区别
				$("#ad").val()：只能获取表单元素的value
				$("#ad").attr("value")：可以获取任意元素的value属性，不管这个元素是否可以允许有value属性
		5.文档内容
		   内部插入：append(content):内部的后置插入
			     prepend(content)：内部的前置插入
		   外部插入：after():外部的后置的插入
			     before():外部的前置插入
		   append（）和html（）的区别：
			eg：$("#sel").append("<option>河北</option>")//追加选项
			    $("#sel").append("<option>辽宁</option>")//追加选项
			    $("#sel").html("<option>山西</option>")//清空所有选项并设置一个选项

		   删除
			$("#div1").remove();//移除id为div1的这个元素
			$("#div2")。empty();//清空id为div2的这个元素中的所有内容，但是这个元素本身不被移除
		6.事件处理
		
		   可以通过有参的事件方法捕获事件
		   通过无参的事件方法触发事件
			可以阻止浏览器的默认行为
		事件处理
		   bind()方法绑定事件
			可以通过return false；阻止浏览器的默认行为和事件起泡
		事件委派：live(type,fn)
			  die([type],[fn])

	4.jquery中的ajax应用
		$.ajax(),$.post()








